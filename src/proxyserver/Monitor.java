/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proxyserver;

import com.jcraft.jsch.Channel;
import com.jcraft.jsch.ChannelSftp;
import com.jcraft.jsch.JSch;
import com.jcraft.jsch.JSchException;
import com.jcraft.jsch.Session;
import com.jcraft.jsch.SftpException;
import java.awt.Color;
import java.awt.Font;
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;
import java.net.URL;
import java.net.UnknownHostException;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author Sachin Oraon
 */
public class Monitor extends javax.swing.JFrame implements Runnable{

    /**
     * Creates new form Monitor
     */
    
        private String host;
	private Integer port;
	private String user;
	private String password;
        
        private JSch jsch,jsch2,jsch3;
        private Session session,session2,session3;
        private Channel channel,channel2,channel3;
        private ChannelSftp sftpChannel,sftpChannel2,sftpChannel3;
        
        Font f;
        Timer ti,tii;
        TimerTask tti,ttii;
        Thread t;

    public Monitor() {
        initComponents();
        jScrollPane3.setBorder(BorderFactory.createEmptyBorder());
        jScrollPane5.setBorder(BorderFactory.createEmptyBorder());
        jScrollPane4.setBorder(BorderFactory.createEmptyBorder());
        jScrollPane1.setBorder(BorderFactory.createEmptyBorder());
        setLocationRelativeTo(null);
        
        t = new Thread(this);
        
        host="172.31.77.251";
        port=22;
        user="pi";
	password="raspberry";
        
        f = new Font("Arial", Font.BOLD, 16);
        JTableHeader header = ResultTable.getTableHeader();
        header.setFont(f);
        
        ResultTable.getColumnModel().getColumn(0).setPreferredWidth(40);
        ResultTable.getColumnModel().getColumn(1).setPreferredWidth(120);
        ResultTable.getColumnModel().getColumn(2).setPreferredWidth(30);
        ResultTable.getColumnModel().getColumn(3).setPreferredWidth(30);
        ResultTable.getColumnModel().getColumn(4).setPreferredWidth(250);
        ResultTable.getColumnModel().getColumn(5).setPreferredWidth(150);

        logmonitor();
        
        iplistmonitor();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        searchButton = new javax.swing.JButton();
        scanbt = new javax.swing.JButton();
        blocktab = new javax.swing.JButton();
        liveButton = new javax.swing.JButton();
        teambutton = new javax.swing.JButton();
        mainpanel = new javax.swing.JPanel();
        tablepanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ResultTable = new javax.swing.JTable();
        searchpanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        iplist = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        searchlist = new javax.swing.JList<>();
        searchtextfield = new javax.swing.JTextField();
        searchbutton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        scanpanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        portlist = new javax.swing.JList<>();
        searchporttextfield = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        scanbutton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        portnofield = new javax.swing.JTextField();
        blockpanel = new javax.swing.JPanel();
        searchwebsite = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        blockbutt = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        weblist = new javax.swing.JList<>();
        jLabel7 = new javax.swing.JLabel();
        teampanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchButton.setBackground(new java.awt.Color(0, 0, 0));
        searchButton.setFont(new java.awt.Font("HP Simplified Light", 1, 20)); // NOI18N
        searchButton.setForeground(new java.awt.Color(255, 255, 255));
        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proxyserver/images/search_white.png"))); // NOI18N
        searchButton.setText(" Search");
        searchButton.setBorder(null);
        searchButton.setContentAreaFilled(false);
        searchButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        jPanel2.add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 0, 120, 50));

        scanbt.setBackground(new java.awt.Color(0, 0, 0));
        scanbt.setFont(new java.awt.Font("HP Simplified Light", 1, 20)); // NOI18N
        scanbt.setForeground(new java.awt.Color(255, 255, 255));
        scanbt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proxyserver/images/scan_white.png"))); // NOI18N
        scanbt.setText(" Scan");
        scanbt.setBorder(null);
        scanbt.setContentAreaFilled(false);
        scanbt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        scanbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scanbtActionPerformed(evt);
            }
        });
        jPanel2.add(scanbt, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 0, 120, 50));

        blocktab.setBackground(new java.awt.Color(0, 0, 0));
        blocktab.setFont(new java.awt.Font("HP Simplified Light", 1, 20)); // NOI18N
        blocktab.setForeground(new java.awt.Color(255, 255, 255));
        blocktab.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proxyserver/images/block_white.png"))); // NOI18N
        blocktab.setText(" Block");
        blocktab.setBorder(null);
        blocktab.setContentAreaFilled(false);
        blocktab.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        blocktab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blocktabActionPerformed(evt);
            }
        });
        jPanel2.add(blocktab, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 0, 120, 50));

        liveButton.setBackground(new java.awt.Color(0, 0, 0));
        liveButton.setFont(new java.awt.Font("HP Simplified Light", 1, 20)); // NOI18N
        liveButton.setForeground(new java.awt.Color(51, 255, 0));
        liveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proxyserver/images/live_green.png"))); // NOI18N
        liveButton.setText("  Live");
        liveButton.setBorder(null);
        liveButton.setContentAreaFilled(false);
        liveButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        liveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                liveButtonActionPerformed(evt);
            }
        });
        jPanel2.add(liveButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 120, 50));

        teambutton.setBackground(new java.awt.Color(0, 0, 0));
        teambutton.setFont(new java.awt.Font("HP Simplified Light", 1, 20)); // NOI18N
        teambutton.setForeground(new java.awt.Color(255, 255, 255));
        teambutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proxyserver/images/team_white.png"))); // NOI18N
        teambutton.setText(" Team");
        teambutton.setBorder(null);
        teambutton.setContentAreaFilled(false);
        teambutton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        teambutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teambuttonActionPerformed(evt);
            }
        });
        jPanel2.add(teambutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 0, 130, 50));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1330, 50));

        mainpanel.setBackground(new java.awt.Color(51, 51, 51));

        tablepanel.setBackground(new java.awt.Color(0, 0, 0));
        tablepanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ResultTable.setBackground(new java.awt.Color(0, 0, 0));
        ResultTable.setFont(new java.awt.Font("HP Simplified Light", 1, 15)); // NOI18N
        ResultTable.setForeground(new java.awt.Color(255, 204, 0));
        ResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Client IP", "Code / Status", "Method", "User Identity", "URL", "Peer Status"
            }
        ));
        ResultTable.setRowHeight(30);
        ResultTable.setShowHorizontalLines(false);
        ResultTable.setShowVerticalLines(false);
        jScrollPane2.setViewportView(ResultTable);

        tablepanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1330, 630));

        searchpanel.setBackground(new java.awt.Color(0, 0, 0));
        searchpanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        iplist.setBackground(new java.awt.Color(0, 0, 0));
        iplist.setFont(new java.awt.Font("HP Simplified Light", 1, 20)); // NOI18N
        iplist.setForeground(new java.awt.Color(51, 204, 0));
        jScrollPane1.setViewportView(iplist);

        searchpanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 80, 300, 540));

        jLabel3.setFont(new java.awt.Font("HP Simplified Light", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("User IP List");
        searchpanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 20, 130, -1));

        searchlist.setBackground(new java.awt.Color(0, 0, 0));
        searchlist.setFont(new java.awt.Font("HP Simplified Light", 1, 20)); // NOI18N
        searchlist.setForeground(new java.awt.Color(51, 204, 0));
        jScrollPane3.setViewportView(searchlist);

        searchpanel.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 990, 540));

        searchtextfield.setBackground(new java.awt.Color(0, 0, 0));
        searchtextfield.setFont(new java.awt.Font("HP Simplified Light", 1, 24)); // NOI18N
        searchtextfield.setForeground(new java.awt.Color(255, 255, 0));
        searchtextfield.setBorder(null);
        searchpanel.add(searchtextfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 360, 30));

        searchbutton.setBackground(new java.awt.Color(0, 0, 0));
        searchbutton.setFont(new java.awt.Font("HP Simplified Light", 1, 18)); // NOI18N
        searchbutton.setForeground(new java.awt.Color(0, 255, 0));
        searchbutton.setText("search");
        searchbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbuttonActionPerformed(evt);
            }
        });
        searchpanel.add(searchbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 20, 110, 30));

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        searchpanel.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 360, 20));

        scanpanel.setBackground(new java.awt.Color(0, 0, 0));
        scanpanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        portlist.setBackground(new java.awt.Color(0, 0, 0));
        portlist.setFont(new java.awt.Font("HP Simplified Light", 1, 20)); // NOI18N
        portlist.setForeground(new java.awt.Color(51, 204, 0));
        jScrollPane4.setViewportView(portlist);

        scanpanel.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, 960, 450));

        searchporttextfield.setBackground(new java.awt.Color(0, 0, 0));
        searchporttextfield.setFont(new java.awt.Font("HP Simplified Light", 1, 24)); // NOI18N
        searchporttextfield.setForeground(new java.awt.Color(102, 255, 0));
        searchporttextfield.setBorder(null);
        searchporttextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchporttextfieldActionPerformed(evt);
            }
        });
        scanpanel.add(searchporttextfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 30, 360, 30));

        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));
        scanpanel.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 60, 360, 20));

        scanbutton.setBackground(new java.awt.Color(0, 0, 0));
        scanbutton.setFont(new java.awt.Font("HP Simplified Light", 1, 18)); // NOI18N
        scanbutton.setForeground(new java.awt.Color(0, 255, 0));
        scanbutton.setText("SCAN");
        scanbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scanbuttonActionPerformed(evt);
            }
        });
        scanpanel.add(scanbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 30, 110, 30));

        jLabel4.setFont(new java.awt.Font("HP Simplified Light", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Scanning Port ");
        scanpanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 130, 160, -1));

        jLabel5.setFont(new java.awt.Font("HP Simplified Light", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Alive Port List");
        scanpanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 150, -1));

        portnofield.setEditable(false);
        portnofield.setBackground(new java.awt.Color(0, 0, 0));
        portnofield.setFont(new java.awt.Font("HP Simplified Light", 1, 24)); // NOI18N
        portnofield.setForeground(new java.awt.Color(255, 255, 0));
        portnofield.setBorder(null);
        scanpanel.add(portnofield, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 130, 80, 30));

        blockpanel.setBackground(new java.awt.Color(0, 0, 0));
        blockpanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchwebsite.setBackground(new java.awt.Color(0, 0, 0));
        searchwebsite.setFont(new java.awt.Font("HP Simplified Light", 1, 24)); // NOI18N
        searchwebsite.setForeground(new java.awt.Color(255, 255, 0));
        searchwebsite.setBorder(null);
        blockpanel.add(searchwebsite, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 40, 360, 30));

        jSeparator3.setForeground(new java.awt.Color(255, 255, 255));
        blockpanel.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 70, 360, 20));

        blockbutt.setBackground(new java.awt.Color(0, 0, 0));
        blockbutt.setFont(new java.awt.Font("HP Simplified Light", 1, 18)); // NOI18N
        blockbutt.setForeground(new java.awt.Color(0, 255, 0));
        blockbutt.setText("Block");
        blockbutt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockbuttActionPerformed(evt);
            }
        });
        blockpanel.add(blockbutt, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 40, 110, 30));

        jLabel6.setFont(new java.awt.Font("HP Simplified Light", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Blocked Website List");
        blockpanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 160, 230, -1));

        weblist.setBackground(new java.awt.Color(0, 0, 0));
        weblist.setFont(new java.awt.Font("HP Simplified Light", 1, 20)); // NOI18N
        weblist.setForeground(new java.awt.Color(51, 204, 0));
        jScrollPane5.setViewportView(weblist);

        blockpanel.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 200, 820, 430));

        jLabel7.setFont(new java.awt.Font("HP Simplified Light", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Website Name");
        blockpanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, 160, -1));

        teampanel.setBackground(new java.awt.Color(0, 0, 0));
        teampanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("HP Simplified Light", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Sourav Burnwal");
        teampanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 380, -1, -1));

        jLabel10.setFont(new java.awt.Font("HP Simplified Light", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Lokesh Chandra");
        teampanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 380, -1, -1));

        jLabel11.setFont(new java.awt.Font("HP Simplified Light", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Sachin Oraon");
        teampanel.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 380, -1, -1));

        jLabel12.setFont(new java.awt.Font("HP Simplified Light", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Amal Kumar Choubey");
        teampanel.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 380, -1, -1));

        jLabel13.setFont(new java.awt.Font("HP Simplified Light", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("2017CA28");
        teampanel.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 420, -1, -1));

        jLabel14.setFont(new java.awt.Font("HP Simplified Light", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("2017CA21");
        teampanel.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 420, -1, -1));

        jLabel15.setFont(new java.awt.Font("HP Simplified Light", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("2017CA75");
        teampanel.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 420, -1, -1));

        jLabel16.setFont(new java.awt.Font("HP Simplified Light", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("2017CA55");
        teampanel.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 420, -1, -1));

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proxyserver/images/E 5747.jpg"))); // NOI18N
        teampanel.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 80, -1, -1));

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proxyserver/images/sourav.jpeg"))); // NOI18N
        teampanel.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 80, -1, -1));

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proxyserver/images/amal.jpg"))); // NOI18N
        teampanel.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, -1, -1));

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proxyserver/images/hack36.jpg"))); // NOI18N
        teampanel.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 70, -1, -1));

        javax.swing.GroupLayout mainpanelLayout = new javax.swing.GroupLayout(mainpanel);
        mainpanel.setLayout(mainpanelLayout);
        mainpanelLayout.setHorizontalGroup(
            mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainpanelLayout.createSequentialGroup()
                .addComponent(tablepanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
            .addGroup(mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(searchpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(scanpanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1330, Short.MAX_VALUE))
            .addGroup(mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(blockpanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1330, Short.MAX_VALUE))
            .addGroup(mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(teampanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1330, Short.MAX_VALUE))
        );
        mainpanelLayout.setVerticalGroup(
            mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tablepanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(searchpanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(scanpanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE))
            .addGroup(mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(blockpanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(teampanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE))
        );

        jPanel1.add(mainpanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 1330, 630));

        jLabel1.setFont(new java.awt.Font("HP Simplified Light", 1, 40)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 0));
        jLabel1.setText("Proxy Server");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 50, 250, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1327, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void liveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_liveButtonActionPerformed
        // TODO add your handling code here:
        mainpanel.removeAll();
        mainpanel.repaint();
        mainpanel.add(tablepanel);
        mainpanel.repaint();
        
        
        URL spath= getClass().getResource("/proxyserver/images/search_white.png");                    
        searchButton.setIcon(new ImageIcon(spath));
        searchButton.setForeground(new Color(255,255,255));
        
        URL lpath= getClass().getResource("/proxyserver/images/live_green.png");                    
        liveButton.setIcon(new ImageIcon(lpath));
        liveButton.setForeground(new Color(51,255,0));
        
        URL scpath= getClass().getResource("/proxyserver/images/scan_white.png");                    
        scanbt.setIcon(new ImageIcon(scpath));
        scanbt.setForeground(new Color(255,255,255));
        
        URL bpath= getClass().getResource("/proxyserver/images/block_white.png");                    
        blocktab.setIcon(new ImageIcon(bpath));
        blocktab.setForeground(new Color(255,255,255));
        
      
        
        URL tpath= getClass().getResource("/proxyserver/images/team_white.png");                    
        teambutton.setIcon(new ImageIcon(tpath));
        teambutton.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_liveButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        
        mainpanel.removeAll();
        mainpanel.repaint();
        mainpanel.add(searchpanel);
        mainpanel.repaint();
     
        
       
                  
                    
        URL spath= getClass().getResource("/proxyserver/images/search_green.png");                    
        searchButton.setIcon(new ImageIcon(spath));
        searchButton.setForeground(new Color(51,255,0));
        
        URL lpath= getClass().getResource("/proxyserver/images/live_white.png");                    
        liveButton.setIcon(new ImageIcon(lpath));
        liveButton.setForeground(new Color(255,255,255));
        
        URL scpath= getClass().getResource("/proxyserver/images/scan_white.png");                    
        scanbt.setIcon(new ImageIcon(scpath));
        scanbt.setForeground(new Color(255,255,255));
        
        URL bpath= getClass().getResource("/proxyserver/images/block_white.png");                    
        blocktab.setIcon(new ImageIcon(bpath));
        blocktab.setForeground(new Color(255,255,255));
        
       
        
        URL tpath= getClass().getResource("/proxyserver/images/team_white.png");                    
        teambutton.setIcon(new ImageIcon(tpath));
        teambutton.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_searchButtonActionPerformed

    private void searchbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbuttonActionPerformed
        // TODO add your handling code here:
        try{
            String key = searchtextfield.getText();
            String filename = "/home/pi/ipweblist.txt";
            String s="";
            connect3();
            
            
            String cdDir = filename.substring(0, filename.lastIndexOf("/")+1);
            sftpChannel3.cd(cdDir);
            
            File file = new File(filename);
            BufferedReader br = new BufferedReader(new InputStreamReader(sftpChannel3.get(file.getName())));
            
            DefaultListModel model = new DefaultListModel();
            int count =0;
            while((s = br.readLine())!= null)
                        {
                                String[] words = s.split(" ");
                                for(String word : words){
                                        if(word.contains(key)){
                                            if(key.matches(".*\\d.*")){
                                                //System.out.println(word.substring(15));
                                                model.add(count++,word.substring(15));
                                                searchlist.setModel(model);
                                            }
                                            else{
                                                //System.out.println(word.substring(0,12));
                                                model.add(count++,word.substring(0,13));
                                                searchlist.setModel(model);
                                            }
                                        }
                                }
                        }

        }
        catch(Exception e)
        {e.printStackTrace();}
        
    }//GEN-LAST:event_searchbuttonActionPerformed

    private void scanbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scanbuttonActionPerformed
        // TODO add your handling code here:
        t.start();
      
    }//GEN-LAST:event_scanbuttonActionPerformed

    
    public void run()
    {
      
      DefaultListModel model = new DefaultListModel();
      int count =0;
      Socket Skt;
      String host = searchporttextfield.getText();

      for (int i = 0; i < 1024; i++) {
         try {
            portnofield.setText(Integer.toString(i));
            Skt = new Socket(host, i);
            
            model.add(count++,i);
            portlist.setModel(model);
            //t.sleep(50);
         } catch (UnknownHostException e) {
            System.out.println("Exception occured"+ e);
            break;
         } catch (IOException e) {} /*catch (InterruptedException ex) {
              Logger.getLogger(Monitor.class.getName()).log(Level.SEVERE, null, ex);
          }*/
      
      }
        
    }
    private void scanbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scanbtActionPerformed
        // TODO add your handling code here:
        
        mainpanel.removeAll();
        mainpanel.repaint();
        mainpanel.add(scanpanel);
        mainpanel.repaint();
        
        URL spath= getClass().getResource("/proxyserver/images/search_white.png");                    
        searchButton.setIcon(new ImageIcon(spath));
        searchButton.setForeground(new Color(255,255,255));
        
        URL lpath= getClass().getResource("/proxyserver/images/live_white.png");                    
        liveButton.setIcon(new ImageIcon(lpath));
        liveButton.setForeground(new Color(255,255,255));
        
        URL scpath= getClass().getResource("/proxyserver/images/scan_green.png");                    
        scanbt.setIcon(new ImageIcon(scpath));
        scanbt.setForeground(new Color(51,255,0));
        
        URL bpath= getClass().getResource("/proxyserver/images/block_white.png");                    
        blocktab.setIcon(new ImageIcon(bpath));
        blocktab.setForeground(new Color(255,255,255));
        

        
        URL tpath= getClass().getResource("/proxyserver/images/team_white.png");                    
        teambutton.setIcon(new ImageIcon(tpath));
        teambutton.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_scanbtActionPerformed

    private void blockbuttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockbuttActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_blockbuttActionPerformed

    private void blocktabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blocktabActionPerformed
        // TODO add your handling code here:
        
        mainpanel.removeAll();
        mainpanel.repaint();
        mainpanel.add(blockpanel);
        mainpanel.repaint();
        
        
        
        
        
        URL spath= getClass().getResource("/proxyserver/images/search_white.png");                    
        searchButton.setIcon(new ImageIcon(spath));
        searchButton.setForeground(new Color(255,255,255));
        
        URL lpath= getClass().getResource("/proxyserver/images/live_white.png");                    
        liveButton.setIcon(new ImageIcon(lpath));
        liveButton.setForeground(new Color(255,255,255));
        
        URL scpath= getClass().getResource("/proxyserver/images/scan_white.png");                    
        scanbt.setIcon(new ImageIcon(scpath));
        scanbt.setForeground(new Color(255,255,255));
        
        URL bpath= getClass().getResource("/proxyserver/images/block_green.png");                    
        blocktab.setIcon(new ImageIcon(bpath));
        blocktab.setForeground(new Color(51,255,0));
        
        
        URL tpath= getClass().getResource("/proxyserver/images/team_white.png");                    
        teambutton.setIcon(new ImageIcon(tpath));
        teambutton.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_blocktabActionPerformed

    private void teambuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teambuttonActionPerformed
        // TODO add your handling code here:
        
        
        mainpanel.removeAll();
        mainpanel.repaint();
        mainpanel.add(teampanel);
        mainpanel.repaint();
        
        
        
        URL spath= getClass().getResource("/proxyserver/images/search_white.png");                    
        searchButton.setIcon(new ImageIcon(spath));
        searchButton.setForeground(new Color(255,255,255));
        
        URL lpath= getClass().getResource("/proxyserver/images/live_white.png");                    
        liveButton.setIcon(new ImageIcon(lpath));
        liveButton.setForeground(new Color(255,255,255));
        
        URL scpath= getClass().getResource("/proxyserver/images/scan_white.png");                    
        scanbt.setIcon(new ImageIcon(scpath));
        scanbt.setForeground(new Color(255,255,255));
        
        URL bpath= getClass().getResource("/proxyserver/images/block_white.png");                    
        blocktab.setIcon(new ImageIcon(bpath));
        blocktab.setForeground(new Color(255,255,255));
        
        
        URL tpath= getClass().getResource("/proxyserver/images/team_green.png");                    
        teambutton.setIcon(new ImageIcon(tpath));
        teambutton.setForeground(new Color(51,255,0));
    }//GEN-LAST:event_teambuttonActionPerformed

    private void searchporttextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchporttextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchporttextfieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public void connect() throws JSchException
	{
		System.out.println("Connection started >>>");
                jsch = new JSch();
                session = jsch.getSession(user, host, port);
                session.setConfig("StrictHostKeyChecking","no");
                session.setPassword(password);
                session.connect();
                
                System.out.println("Connected.....>>>>>>>>>>");
                
                channel = session.openChannel("sftp");
                channel.connect();
                sftpChannel = (ChannelSftp) channel;
                sftpChannel2 = (ChannelSftp) channel;
	}
    
    public void connect2() throws JSchException
	{
		System.out.println("Connection started 2>>>");
                jsch2 = new JSch();
                session2 = jsch2.getSession(user, host, port);
                session2.setConfig("StrictHostKeyChecking","no");
                session2.setPassword(password);
                session2.connect();
                
                System.out.println("Connected.....2>>>>>>>>>>");
                
                channel2 = session2.openChannel("sftp");
                channel2.connect();
                sftpChannel2 = (ChannelSftp) channel2;
	}
    
     public void connect3() throws JSchException
	{
		System.out.println("Connection started 3>>>");
                jsch3 = new JSch();
                session3 = jsch3.getSession(user, host, port);
                session3.setConfig("StrictHostKeyChecking","no");
                session3.setPassword(password);
                session3.connect();
                
                System.out.println("Connected.....3>>>>>>>>>>");
                
                channel3 = session3.openChannel("sftp");
                channel3.connect();
                sftpChannel3 = (ChannelSftp) channel3;
	}
    
    public void logmonitor()
    {
        try {
                    connect();
                } catch (JSchException ex) {
                    Logger.getLogger(Monitor.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                String filename = "/home/pi/mylog.txt";
                
                ti = new Timer();
                ti.schedule(tti=new TimerTask()
                {
                    public void run()
                    {
                        try{
                            String cdDir = filename.substring(0, filename.lastIndexOf("/")+1);
                            sftpChannel.cd(cdDir);

                            File file = new File(filename);
                            //BufferedInputStream bis = new BufferedInputStream(sftpChannel.get(file.getName()));
                            BufferedReader br = new BufferedReader(new InputStreamReader(sftpChannel.get(file.getName())));
                            //byte[] contents = new byte[1024];

                            //int byteRead = 0;
                            //String strFileContains=null;

                            DefaultTableModel model = (DefaultTableModel)ResultTable.getModel();
                            
                            Object[] tableLines = br.lines().toArray();
                            /*try {
                                while((byteRead =  bis.read(contents)) != -1)
                                {
                                    strFileContains = new String(contents, 0, byteRead);
                                    //System.out.println(strFileContains);
                                    //System.out.println(strFileContains.split("/"));
                                    //MonitorArea.setText(strFileContains);
                                    //System.out.println("____________________________________");
                                }
                                System.out.println(strFileContains);
                                System.out.println("---------------------------------END-----------------------------------");
                            } catch (IOException ex) {
                                Logger.getLogger(Monitor.class.getName()).log(Level.SEVERE, null, ex);
                            }*/
                            model.setRowCount(0);
                            for(int i = 0; i < tableLines.length; i++)
                            {
                                String line = tableLines[i].toString().trim();
                                String[] dataRow = line.split("=>");
                                model.addRow(dataRow);
                            }
  
                            } catch (SftpException ex) {
                Logger.getLogger(Monitor.class.getName()).log(Level.SEVERE, null, ex);
            }
                             }
                    },0, 1000);
    }
    
    public void iplistmonitor()
    {
        
         try {
                    connect2();
                } catch (JSchException ex) {
                    Logger.getLogger(Monitor.class.getName()).log(Level.SEVERE, null, ex);
                }
        
        
         String filename = "/home/pi/iplist.txt";

                tii = new Timer();
                tii.schedule(ttii=new TimerTask()
                {
                    public void run()
                    {
         try{  
           String s="";  
           File file = new File(filename);
           String cdDir = filename.substring(0, filename.lastIndexOf("/")+1);
           sftpChannel2.cd(cdDir);
           BufferedReader br = new BufferedReader(new InputStreamReader(sftpChannel2.get(file.getName())));
            
           DefaultListModel model = new DefaultListModel();
           int count =0;
           
           while((s = br.readLine())!= null)
                        {
                                String[] words = s.split(" ");
                                for(String word : words){
                                                model.add(count++,word);
                                                iplist.setModel(model);
                                }
                        }
         
        }
        catch(Exception e)
        {e.printStackTrace();}
        
        }
                    },0, 3000);
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Monitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Monitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Monitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Monitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Monitor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ResultTable;
    private javax.swing.JButton blockbutt;
    private javax.swing.JPanel blockpanel;
    private javax.swing.JButton blocktab;
    private javax.swing.JList<String> iplist;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JButton liveButton;
    private javax.swing.JPanel mainpanel;
    private javax.swing.JList<String> portlist;
    private javax.swing.JTextField portnofield;
    private javax.swing.JButton scanbt;
    private javax.swing.JButton scanbutton;
    private javax.swing.JPanel scanpanel;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchbutton;
    private javax.swing.JList<String> searchlist;
    private javax.swing.JPanel searchpanel;
    private javax.swing.JTextField searchporttextfield;
    private javax.swing.JTextField searchtextfield;
    private javax.swing.JTextField searchwebsite;
    private javax.swing.JPanel tablepanel;
    private javax.swing.JButton teambutton;
    private javax.swing.JPanel teampanel;
    private javax.swing.JList<String> weblist;
    // End of variables declaration//GEN-END:variables
}
